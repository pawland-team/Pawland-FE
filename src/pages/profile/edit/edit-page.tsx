import Head from 'next/head';
import { useEffect, useState } from 'react';
import { CommonButton } from '../../../shared/ui/buttons/index';

import * as S from './edit-page-style';
import { useGetUserInfo } from '@entities/user/hooks';
import { useUserStore } from '@entities/user/model';

export const EditPage = () => {
  const { data, status } = useGetUserInfo();
  const { setUserInfo } = useUserStore((state) => ({ setUserInfo: state.setUserInfo }));
  const [nickname, setNickname] = useState(data?.nickname);
  const [description, setDescription] = useState(data?.userDesc);
  const [selectedFile, setSelectedFile] = useState<string | null>(data?.profileImage || null);

  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    const file = event.target.files?.[0];
    if (file) {
      setSelectedFile(URL.createObjectURL(file));
    }
  };
  console.log(selectedFile);

  useEffect(() => {
    if (status === 'success' && data) {
      setUserInfo(data);
    }
  }, [data, status]);

  return (
    <>
      <Head>
        <title>Pawland Profile</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <main>
        <S.EditPage>
          <S.PageTitle>프로필</S.PageTitle>
          <S.InfoContainer>
            <S.ProfileImage src={selectedFile} alt='프로필 이미지' width={200} height={200} />
            <S.EditButtonArea>
              <S.ImageEditButton htmlFor='fileUpload'>바꾸기</S.ImageEditButton>
              <S.FileUploadInput id='fileUpload' type='file' accept='image/*' onChange={handleFileChange} />

              <S.ImageEditButton>삭제</S.ImageEditButton>
            </S.EditButtonArea>
            <S.InputArea>
              <S.InputItem>
                <S.Label htmlFor='name'>닉네임</S.Label>
                <div>
                  <S.NicknameInput
                    type='text'
                    id='name'
                    name='nickname'
                    value={nickname}
                    onChange={(e) => setNickname(e.target.value)}
                  />
                  <CommonButton
                    borderRadius={'4px'}
                    backgroundColor={'#43ADFF'}
                    maxWidth={'65px'}
                    fontSize={'1.2rem'}
                    padding={'6px 10px'}
                  >
                    변경하기
                  </CommonButton>
                </div>
              </S.InputItem>

              <S.InputItem>
                <S.Label htmlFor='description'>소개</S.Label>
                <S.DescriptionInput
                  id='description'
                  name='description'
                  value={description}
                  onChange={(e) => setDescription(e.target.value)}
                />
                <S.SaveButtonArea>
                  <CommonButton
                    borderRadius={'4px'}
                    backgroundColor={'#43ADFF'}
                    maxWidth={'65px'}
                    fontSize={'1.2rem'}
                    padding={'6px 10px'}
                  >
                    저장하기
                  </CommonButton>
                </S.SaveButtonArea>
              </S.InputItem>
            </S.InputArea>
            <S.LoginInfoArea>
              <S.Label htmlFor='idInfo'>아이디 정보</S.Label>
              <S.LoginInformation> 카카오로 로그인 되었습니다.</S.LoginInformation>
            </S.LoginInfoArea>

            <S.BigButtonArea>
              <S.BigButton>비밀번호 변경하기</S.BigButton>
              <S.BigButton>로그아웃</S.BigButton>
              <S.UnregisterButton>회원탈퇴</S.UnregisterButton>
            </S.BigButtonArea>
          </S.InfoContainer>
        </S.EditPage>
      </main>
    </>
  );
};
